services:
  stockmanager:
    container_name: stockmanager
    image: stockmanager:latest
    build:
      context: .
      dockerfile: StockManager/Dockerfile
      target: final
    ports:
      - "5000:8080"
      - "5001:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
        redis:
            condition: service_healthy
        sqlserver:
            condition: service_healthy

    volumes:
      - ./logs:/app/logs

  sqlserver:
    container_name: stockmanager-sql
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
        SA_PASSWORD: ${sa-password}
        ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sql-data:/var/opt/mssql
    healthcheck:
        test: ["CMD-SHELL", "bash -c 'echo > /dev/tcp/127.0.0.1/1433'"]
        interval: 15s
        timeout: 10s
        retries: 5
        start_period: 60s
  
  redis:
    container_name: stockmanager-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 5

  tests:
    container_name: stockmanager-tests
    build:
      context: .
      dockerfile: ./StockManager/Dockerfile
      target: test
    depends_on:
     - stockmanager
     - sqlserver

volumes:
    sql-data: {}
    grafana-storage: {}

  
